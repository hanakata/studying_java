クラスにはフィールドとメソッドを定義できる。
フィールドは変数、メソッドは処理。

クラスのメリットは複数の箇所から利用できることとデータをまとめること。

アクセス修飾子はクラスの外部からアクセスを制御するための修飾子。
クラスに指定できるアクセス修飾子はpublic
メンバに指定できるのはpublic protected private
フィールド値に値をセットするメソッドはセッタ、取得するメソッドをゲッタと呼ぶ。

標準ライブラリはクラスの機能ごとにパッケージと呼ばれる単位に分類されている。
利用する場合はimportコマンドを利用して事前に宣言する。
ただしjava.langパッケージはデフォルトで読み込まれることになっているので
importで宣言する必要はない。
クラスについて調べる場合、ネット上に情報があるのでそれを確認すること。
クラスには使わない方が良いクラスというのもある。

文字列の比較には==ではなくequalsを利用すること。
==だとインスタンスが同じかを見るので同じ文字列でもエラーになる。

例外は複数指定できる。
例外の型にExceptionを指定するとほぼ全ての例外がキャッチできる。

必ず実行させたい処理はfinallyの中に記述する。
例外はクラスなのでキャッチした後、メソッドを呼び出すことは可能。
例外処理が発生した場合は必ず処理を実施するよう記述しておくこと。

Javaのクラスの中には例外を必ず記述しなければならないものもある
そういう場合、記述されていなければコンパイルエラーになるのでそのときは
throwを追加するかtry~catchを入れること。

入力待ちを行うときはScannerを利用すること。
可変長引数を利用する場合は引数の型の後ろに...と言う記号を記述すること。

JARファイルは複数のファイルを単一のファイルにまとめたもの。解凍は普通にできる。