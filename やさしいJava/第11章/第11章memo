第11章 新しいクラス

元々あるクラスを利用して新しいクラスを作成することが出来る。
これをクラスを拡張するという。
新しいクラスは元々あるクラスのメンバを受け継ぐ。
その際、元となる既存クラスはスーパークラス、新しいクラスはサブクラスと呼ばれる。
クラスの機能として継承、カプセル化、多態性はJavaの強み。

super()を使うことでスーパークラスのどのコンストラクタを呼び出すかが指定できる。

スーパークラスのprivateメンバにはサブクラスからもアクセスできない。
そのためprotectedをスーパークラスで指定することでアクセスできるようになる。

サブクラスのメソッドがスーパークラスのメソッドに代わって機能することをオーバーライドと呼ぶ。
またスーパクラスの変数を使ってサブクラスのオブジェクトを扱うことができる。
サブクラスからスーパークラスの同じ名前のメンバにアクセスする場合にはsuperをつける。
メソッドにfinalをつけるとサブクラスでオーバーライドできなくなる。
フィールドにfinalをつけると値を変更できなくなる。
クラスにfinalをつけるとクラスを拡張できなくなる。

スーパークラスを指定しないクラスはObjectクラスのサブクラスとなる。

ObjectクラスのtoString()メソッドをオーバーライドするとオブジェクトを表す文字列を定めることができる。
objectクラスのequalsメソッドでオブジェクトが同じかを調べることができる。

objectクラスのgetClassメソッドでオブジェクトのクラス情報を取得できる。