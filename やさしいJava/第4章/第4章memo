第4章 式と演算子

Javaで式を表すには演算子とオペランドを組み合わせる。
＋が演算子で1とかがオペランドになる。
計算式は()でくくる必要がある。

計算と前章で作成したキーボード入力を利用して足し算プログラムを作成することができる。

演算子はいろいろとある。
文字列連結は今まで使っていた通り+を使う。
インクリメント、デクリメントはそれぞれ++と--を利用する。
これを利用することで1加算、減算することができる。

インクリメントは前置と後置がありそれぞれ動きが違う。
後置の場合は代入してからインクリメントする。
前置の場合はインクリメントしてから代入する。

代入演算子は＝のこと。
＝だけでなくいろいろな記号を組み合わせて代入することもできる。

シフト演算は>> <<<などを利用する。
シフト演算は2新数で表した場合のけたを左または右に指定数だけずらすもの。
5を2進数で表すと0000000000000101
これに対し<<2を行うと
000000000010100と左に2シフトすることで20となる。
なので5<<2は20となる。

四則演算の優先順位は通常と同じ。なので＋を優先したい場合は()で囲む。
優先順位が同じものは左から順に計算される。

かっこをつけない状態で文字列連結を実施した場合は文字列連結として評価される。

int型をdouble型に代入することは代入する側がサイズが大きいので可能。
小さいサイズの場合はコンパイルに失敗する。
小さなサイズから大きなサイズへ型を変換する場合は明示的に書いておく。
(int)dnum こんな感じ。

型が違う場合一方のオペランドを大きなサイズの型に変換してから演算を行う。
得られる結果も大きなサイズの型。

同じ型同士で計算を実施し結果が別の型になるものに関しては
同じ型で出力しようとするので結果が変わる可能性がある。
なので結果を例えばdoubleで出したいint型の場合はどちらか一方をdouble型にしておく必要がある。